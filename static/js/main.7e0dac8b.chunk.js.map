{"version":3,"sources":["documents/GilbertSolisResume.pdf","images/championsleague.jpg","images/covidnstuff.jpg","images/password.jpg","images/burger.JPG","components/Navbar.js","components/Header.js","components/index.js","components/Resume.js","components/Portfolio.js","components/Contact.js","App.js","serviceWorker.js","index.js","avatar.png"],"names":["module","exports","useStyles","makeStyles","theme","menuSliderContainer","width","background","height","avatar","display","margin","listItem","color","menuItems","listIcon","listText","listPath","AssignmentInd","Apps","ContactMail","Navbar","slider","useState","right","state","setState","toggleSlider","open","classes","Box","component","AppBar","position","style","Toolbar","IconButton","onClick","ArrowBack","Typography","variant","anchor","onClose","className","Divider","List","map","lsItem","key","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","title","subtitle","marginBottom","typedContainer","top","left","transform","textAlign","zIndex","Header","Grid","container","justify","strings","typeSpeed","backSpeed","loop","particlesCanva","Home","canvasClassName","params","interactivity","particles","number","value","density","enable","value_area","Resume","align","marginTop","href","Pdf","target","mainContainer","cardContainer","maxWidth","seeTheRest","justifyContent","paddingBottom","fontSize","Portfolio","alignItems","item","xs","sm","md","Card","CardActionArea","CardMedia","alt","image","project1","CardContent","gutterBottom","CardActions","Button","size","project2","project3","project4","src","form","borderColor","InputField","withStyles","root","TextField","Contacts","textTransform","fullWidth","label","varaint","inputProps","endIcon","App","CssBaseline","exact","path","process","BASE_URL","Contact","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7e0dac8b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GilbertSolisResume.42b1f0e0.pdf\";","module.exports = __webpack_public_path__ + \"static/media/championsleague.f33ec7b4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/covidnstuff.61ba1c80.jpg\";","module.exports = __webpack_public_path__ + \"static/media/password.bda712f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/burger.2a3c3ddd.JPG\";","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport MobilRightMenuSlider from \"@material-ui/core/Drawer\"\r\nimport {\r\n    AppBar,\r\n    Toolbar,\r\n    ListItem,\r\n    ListItemIcon,\r\n    IconButton,\r\n    ListItemText,\r\n    Avatar,\r\n    Divider,\r\n    List,\r\n    Typography,\r\n    Box,\r\n\r\n} from \"@material-ui/core\";\r\nimport {\r\n    ArrowBack,\r\n    AssignmentInd,\r\n    Home,\r\n    Apps,\r\n    ContactMail\r\n\r\n} from \"@material-ui/icons\"\r\nimport avatar from \"../avatar.png\"\r\n\r\n//styles\r\nconst useStyles = makeStyles(theme => ({\r\n    menuSliderContainer: {\r\n        width: 250,\r\n        background: \"#511\",\r\n        height: \"100%\"\r\n    },\r\n    avatar: {\r\n        display: \"block\",\r\n        margin: \"0.5rem auto\",\r\n        // width: '50px',\r\n        // height: '50px'\r\n    },\r\n    listItem: {\r\n        color: \"tan\"\r\n    }\r\n}));\r\n\r\nconst menuItems = [\r\n    {\r\n        listIcon: <Home />,\r\n        listText: \"Home\",\r\n        listPath: \"/\"\r\n    },\r\n    {\r\n        listIcon: <AssignmentInd />,\r\n        listText: \"Resume\",\r\n        listPath: \"/resume\"\r\n    },\r\n    {\r\n        listIcon: <Apps />,\r\n        listText: \"Portfolio\",\r\n        listPath: \"/portfolio\"\r\n\r\n    },\r\n    {\r\n        listIcon: <ContactMail />,\r\n        listText: \"Contact\",\r\n        listPath: \"/contact\"\r\n    }\r\n];\r\n\r\nconst Navbar = () => {\r\n    const [state, setState] = useState({\r\n        right: false\r\n    });\r\n    const toggleSlider = (slider, open) => () => {\r\n        setState({ ...state, [slider]: open })\r\n    }\r\n    const classes = useStyles()\r\n    const sideList = slider => (\r\n        <Box className={classes.menuSliderContainer} component=\"div\"\r\n            onClick={toggleSlider(slider, false)}>\r\n            {/* <Avatar className={classes.avatar} src={avatar} alt=\"Gil Solis\" /> */}\r\n            <Divider />\r\n            <List>\r\n                {menuItems.map((lsItem, key) => (\r\n                    <ListItem button key={key} component={Link} to={lsItem.listPath}>\r\n                        <ListItemIcon className={classes.listItem}>\r\n                            {lsItem.listIcon}\r\n                        </ListItemIcon>\r\n                        <ListItemText className={classes.listItem} primary={lsItem.listText} />\r\n                    </ListItem>\r\n                ))}\r\n            </List>\r\n        </Box>\r\n\r\n    )\r\n    return (\r\n        <>\r\n\r\n            <Box component=\"nav\">\r\n                <AppBar position=\"static\" style={{ background: \"#222\" }}>\r\n                    <Toolbar>\r\n                        <IconButton onClick={toggleSlider(\"right\", true)} >\r\n                            <ArrowBack style={{ color: \"tomato\" }} />\r\n                        </IconButton>\r\n                        <Typography variant=\"h5\" >\r\n                            Portfolio\r\n                    </Typography>\r\n                        <MobilRightMenuSlider anchor='right'\r\n                            open={state.right} onClose={toggleSlider(\"right\", false)}>\r\n                            {sideList(\"right\")}\r\n\r\n                        </MobilRightMenuSlider>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react'\r\nimport { makeStyles } from \"@material-ui/styles\"\r\nimport {\r\n    Typography,\r\n    Avatar,\r\n    Grid,\r\n    Box\r\n} from \"@material-ui/core\";\r\nimport avatar from \"../avatar.png\";\r\nimport Typed from \"react-typed\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    avatar: {\r\n        width: '60px',\r\n        height: '60px',\r\n        margin: '1px'\r\n    },\r\n    title: {\r\n        color: \"tomato\"\r\n    },\r\n    subtitle: {\r\n        color: \"tan\",\r\n        marginBottom: \"3rem\"\r\n    },\r\n    typedContainer: {\r\n        position: \"absolute\",\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        width: \"100vw\",\r\n        textAlign: \"center\",\r\n        zIndex: 1\r\n    }\r\n\r\n}))\r\n\r\nexport const Header = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box className={classes.typedContainer}>\r\n            <Grid container justify=\"center\">\r\n                {/* <Avatar className={classes.avatar} src={avatar} alt=\"Gil Solis\" /> */}\r\n            </Grid>\r\n            <Typography className={classes.title} variant=\"h4\">\r\n                <Typed strings={[\"Gil Solis\"]} typeSpeed={70} />\r\n            </Typography>\r\n            <Typography className={classes.subtitle} variant=\"h5\">\r\n                <Typed strings={[\"Web Design\", \"Web Development\", \"MERN Stack\", \"Some Other Buzz Words\"]}\r\n                    typeSpeed={70}\r\n                    backSpeed={60}\r\n                    loop\r\n                />\r\n            </Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react'\r\nimport Navbar from \"./Navbar\"\r\nimport Header from \"./Header\"\r\nimport Particles from 'react-particles-js'\r\nimport { makeStyles } from \"@material-ui/styles\"\r\n\r\nconst useStyles = makeStyles({\r\n    particlesCanva: {\r\n        position: \"absolute\"\r\n    }\r\n})\r\n\r\n\r\nconst Home = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div>\r\n            <Particles\r\n                canvasClassName={classes.particlesCanva}\r\n                params={{\r\n                    interactivity: {\r\n                        \"events\": {\r\n                            \"onclick\": {\r\n                                \"enable\": true,\r\n                                \"mode\": \"push\"\r\n                            }\r\n                        },\r\n                        \"modes\": {\r\n                            \"push\": {\r\n                                \"particles_nb\": 1\r\n                            }\r\n                        }\r\n                    },\r\n                    particles: {\r\n                        number: {\r\n                            value: 45,\r\n                            density: {\r\n                                enable: true,\r\n                                value_area: 900\r\n                            }\r\n                        }\r\n                    }\r\n                }}\r\n            />\r\n            <Navbar />\r\n            <Header />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { makeStyles } from \"@material-ui/styles\";\r\nimport { Typography, Box } from \"@material-ui/core\";\r\nimport Navbar from \"./Navbar\";\r\nimport Pdf from \"../documents/GilbertSolisResume.pdf\"\r\n\r\nconst useStyles = makeStyles({\r\n    style: {\r\n        color: \"white\"\r\n\r\n    }\r\n})\r\n\r\nconst Resume = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Box component='header'>\r\n                <Typography variant='h4' align='center' style={{ marginTop: \"5%\" }}>\r\n                    <a href={Pdf} target=\"_blank\" className={classes.style}>Click Me!</a>\r\n                </Typography>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resume;","import React from 'react'\r\nimport Navbar from './Navbar';\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport {\r\n    Box,\r\n    Grid,\r\n    Card,\r\n    CardActionArea,\r\n    CardActions,\r\n    CardContent,\r\n    CardMedia,\r\n    Button,\r\n    Typography\r\n} from \"@material-ui/core\";\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport project1 from \"../images/championsleague.jpg\"\r\nimport project2 from \"../images/covidnstuff.jpg\"\r\nimport project3 from \"../images/password.jpg\"\r\nimport project4 from \"../images/burger.JPG\"\r\nimport zIndex from '@material-ui/core/styles/zIndex';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    mainContainer: {\r\n        background: \"#233\",\r\n        height: \"100%\"\r\n    },\r\n    cardContainer: {\r\n        maxWidth: 345,\r\n        // margin: \"3rem\",\r\n        margin: \"5rem auto\"\r\n    },\r\n    seeTheRest: {\r\n        color: \"white\",\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        paddingBottom: \"100px\",\r\n        background: \"#233\",\r\n        fontSize: \"3rem\"\r\n\r\n    }\r\n})\r\n\r\n\r\nconst Portfolio = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <>\r\n            <Box component=\"div\" className={classes.mainContainer}>\r\n                <Navbar />\r\n                <Grid container justify='center' alignItems='center'>\r\n                    { /* Project 1 */}\r\n                    <Grid item xs={12} sm={8} md={6}>\r\n                        <Card className={classes.cardContainer}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    component='img'\r\n                                    alt=\"Project 1\"\r\n                                    height=\"140\"\r\n                                    image={project1}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\">\r\n                                        Project 1 - Champions League Tracker\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        Enables users to get the most current game data and videos from the Champions League. Users need to select two teams from the dropdown and press \"Go\" to view game date or schedule information. Additionally, videos of games played will be available.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    <a href=\"https://github.com/GilSolis/ChampionsLeague\">\r\n                                        <GitHubIcon />\r\n                                    </a>\r\n\r\n                                </Button>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    <a href=\"https://alexshanless.github.io/Champ-Leag-Tracker\">\r\n                                        Live Demo\r\n                                </a>\r\n                                </Button>\r\n                            </CardActions>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    { /* Project 2 */}\r\n                    <Grid item xs={12} sm={8} md={6}>\r\n                        <Card className={classes.cardContainer}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    component='img'\r\n                                    alt=\"Project 1\"\r\n                                    height=\"140\"\r\n                                    image={project2}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\">\r\n                                        Project 2 - Covid n Stuff\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        Enables users to get up to date statistics surrounding Covid-19 in regards to number of cases and deaths broken down by location. Additionally, local users can view a dynamically updated data set of businesses along with their operational details. User can also read thoughts and prayers left by others or add a prayer of there oww in a Thoughts and Prayers social component.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    <a href=\"https://github.com/GilSolis/corona-virus-tracker\">\r\n                                        <GitHubIcon />\r\n                                    </a>\r\n                                </Button>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    <a href=\"https://covidnstuff.herokuapp.com/\">\r\n                                        Live Demo\r\n                                </a>\r\n                                </Button>\r\n                            </CardActions>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    { /* Project 3 */}\r\n                    <Grid item xs={12} sm={8} md={6}>\r\n                        <Card className={classes.cardContainer}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    component='img'\r\n                                    alt=\"Project 1\"\r\n                                    height=\"140\"\r\n                                    image={project3}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\">\r\n                                        Password Generator\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        A password generator that works off user input to determine the length of password and which characters to include.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    <a href=\"https://github.com/GilSolis/ChampionsLeague\">\r\n                                        <GitHubIcon />\r\n                                    </a>\r\n                                </Button>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    Live Demo\r\n                                    </Button>\r\n                            </CardActions>\r\n\r\n                        </Card>\r\n                    </Grid>\r\n                    { /* Project 4 */}\r\n                    <Grid item xs={12} sm={8} md={6}>\r\n                        <Card className={classes.cardContainer}>\r\n                            <CardActionArea>\r\n                                <CardMedia\r\n                                    component='img'\r\n                                    alt=\"Project 1\"\r\n                                    height=\"140\"\r\n                                    image={project4}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography gutterBottom variant=\"h5\">\r\n                                        Burger Mania!\r\n                                    </Typography>\r\n                                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                                        Burger Mania! is a restaurant app that lets users input the names of burgers they'd like to eat and devour them.\r\n                                    </Typography>\r\n                                </CardContent>\r\n                            </CardActionArea>\r\n                            <CardActions>\r\n                                <Button size=\"small\" color=\"primary\" src=\"\">\r\n                                    <a href=\"https://github.com/GilSolis/ChampionsLeague\">\r\n                                        <GitHubIcon />\r\n                                    </a>\r\n                                </Button>\r\n                                <Button size=\"small\" color=\"primary\">\r\n                                    Live Demo\r\n                                    </Button>\r\n                            </CardActions>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </Box>\r\n            <a href=\"https://github.com/GilSolis\" className={classes.seeTheRest} >See the Rest!</a>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Portfolio;\r\n","import React from \"react\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, Typography, Button, Grid, Box } from \"@material-ui/core\";\r\nimport SendIcon from \"@material-ui/icons/Send\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    form: {\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        transform: \"translate(-50%,-50%)\",\r\n        position: \"absolute\",\r\n    },\r\n    button: {\r\n        marginTop: \"1rem\",\r\n        color: \"tomato\",\r\n        borderColor: \"tomato\",\r\n    },\r\n}));\r\n\r\nconst InputField = withStyles({\r\n    root: {\r\n        \"& label.Mui-focused\": {\r\n            color: \"tomato\",\r\n        },\r\n        \"& label\": {\r\n            color: \"tan\",\r\n        },\r\n        \"& .MuiOutlinedInput-root\": {\r\n            \"& fieldset\": {\r\n                borderColor: \"tan\",\r\n            },\r\n            \"&:hover fieldset\": {\r\n                borderColor: \"tan\",\r\n            },\r\n            \"& .Mui-focused fieldset\": {\r\n                borderColor: \"tan\",\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nconst Contacts = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Box component=\"div\" style={{ background: \"#233\", height: \"100vh\" }}>\r\n            <Navbar />\r\n            <Grid container justify=\"center\">\r\n                <Box component=\"form\" className={classes.form}>\r\n                    <Typography\r\n                        variant=\"h5\"\r\n                        style={{\r\n                            color: \"tomato\",\r\n                            textAlign: \"center\",\r\n                            textTransform: \"uppercase\",\r\n                        }}\r\n                    >\r\n                        Say Hi!\r\n          </Typography>\r\n                    <InputField\r\n                        fullWidth={true}\r\n                        label=\"Name\"\r\n                        varaint=\"outlined\"\r\n                        inputProps={{ style: { color: \"white\" } }}\r\n                        margin=\"dense\"\r\n                        size=\"medium\"\r\n                    />\r\n                    <br />\r\n                    <InputField\r\n                        fullWidth={true}\r\n                        label=\"Email\"\r\n                        varaint=\"outlined\"\r\n                        inputProps={{ style: { color: \"white\" } }}\r\n                        margin=\"dense\"\r\n                        size=\"medium\"\r\n                    />\r\n                    <br />\r\n                    <InputField\r\n                        fullWidth={true}\r\n                        label=\"Company Name\"\r\n                        varaint=\"outlined\"\r\n                        inputProps={{ style: { color: \"white\" } }}\r\n                        margin=\"dense\"\r\n                        size=\"medium\"\r\n                    />\r\n                    <br />\r\n                    <Button\r\n                        className={classes.button}\r\n                        variant=\"outlined\"\r\n                        fullWidth={true}\r\n                        endIcon={<SendIcon />}\r\n                    >\r\n                        Send it\r\n          </Button>\r\n                </Box>\r\n            </Grid>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default Contacts;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Home from './components/index';\nimport './App.css';\nimport Resume from \"./components/Resume\"\nimport Portfolio from './components/Portfolio';\nimport Contact from './components/Contact';\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <Route exact path={process.env.BASE_URL} component={Home} />\n      <Route path=\"/resume\" component={Resume} />\n      <Route path=\"/portfolio\" component={Portfolio} />\n      <Route path=\"/contact\" component={Contact} />\n    </>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/avatar.6ac01532.png\";"],"sourceRoot":""}